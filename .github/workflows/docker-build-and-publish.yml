name: Build and Publish Docker Images

on:
  push:
    branches:
      - master
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
      - main
  schedule:
    # Weekly build to get latest Verus releases (Sundays at 2 AM UTC)
    - cron: '0 2 * * 0'
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild of all images'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - variant: stable
            verus_release_type: stable
            tags_suffix: ""
          - variant: prerelease
            verus_release_type: prerelease
            tags_suffix: "-prerelease"
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Branch-based tags
            type=ref,event=branch,suffix=${{ matrix.tags_suffix }}
            # Tag-based tags
            type=ref,event=tag,suffix=${{ matrix.tags_suffix }}
            # PR-based tags
            type=ref,event=pr,suffix=${{ matrix.tags_suffix }}
            # Latest tag for stable on main/master
            type=raw,value=latest${{ matrix.tags_suffix }},enable={{is_default_branch}},condition=${{ matrix.variant == 'stable' }}
            # Variant-specific latest
            type=raw,value=${{ matrix.variant }},enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=Verus Verifier (${{ matrix.variant }})
            org.opencontainers.image.description=Docker container for Verus verification with Ubuntu 22.04, Rust 1.88.0, and Verus ${{ matrix.variant }} release
            org.opencontainers.image.vendor=Beneficial AI Foundation

      - name: Get current Verus version
        id: verus-version
        run: |
          if [ "${{ matrix.variant }}" = "stable" ]; then
            VERSION=$(curl -s https://api.github.com/repos/verus-lang/verus/releases | jq -r '.[] | select(.prerelease == false) | .tag_name' | head -n1)
          else
            VERSION=$(curl -s https://api.github.com/repos/verus-lang/verus/releases | jq -r '.[0].tag_name')
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Current Verus ${{ matrix.variant }} version: $VERSION"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.verus
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            ${{ steps.meta.outputs.labels }}
            verus.version=${{ steps.verus-version.outputs.version }}
            verus.release-type=${{ matrix.variant }}
          build-args: |
            VERUS_RELEASE_TYPE=${{ matrix.verus_release_type }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          # Test that the image runs and Verus is properly installed
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.variant }} \
            /root/.cargo/bin/verus-x86-linux/verus --version

  create-release:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Verus versions
        id: verus-versions
        run: |
          STABLE_VERSION=$(curl -s https://api.github.com/repos/verus-lang/verus/releases | jq -r '.[] | select(.prerelease == false) | .tag_name' | head -n1)
          PRERELEASE_VERSION=$(curl -s https://api.github.com/repos/verus-lang/verus/releases | jq -r '.[0].tag_name')
          echo "stable=$STABLE_VERSION" >> $GITHUB_OUTPUT
          echo "prerelease=$PRERELEASE_VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Verus Verifier Docker Images ${{ github.ref_name }}
          body: |
            ## Verus Verifier Docker Images ${{ github.ref_name }}
            
            This release provides Docker images for Verus verification with the following Verus versions:
            
            - **Stable**: ${{ steps.verus-versions.outputs.stable }}
            - **Prerelease**: ${{ steps.verus-versions.outputs.prerelease }}
            
            ### Available Images
            
            ```bash
            # Latest stable release
            docker pull ghcr.io/beneficial-ai-foundation/dockerfile_verus:latest
            docker pull ghcr.io/beneficial-ai-foundation/dockerfile_verus:stable
            docker pull ghcr.io/beneficial-ai-foundation/dockerfile_verus:${{ github.ref_name }}
            
            # Latest prerelease
            docker pull ghcr.io/beneficial-ai-foundation/dockerfile_verus:prerelease
            docker pull ghcr.io/beneficial-ai-foundation/dockerfile_verus:${{ github.ref_name }}-prerelease
            ```
            
            ### Usage
            
            ```bash
            # Verify entire project
            docker run --rm -v /path/to/project:/workspace ghcr.io/beneficial-ai-foundation/dockerfile_verus:latest \
              /usr/local/bin/verify-verus.sh --work-dir /workspace
            
            # Verify specific module
            docker run --rm -v /path/to/project:/workspace ghcr.io/beneficial-ai-foundation/dockerfile_verus:latest \
              /usr/local/bin/verify-verus.sh --work-dir /workspace \
              --verify-only-module module::path::name
            ```
            
            ### What's Included
            
            - Ubuntu 22.04 base image
            - Rust 1.88.0 toolchain  
            - Verus verification tool (stable and prerelease variants)
            - Helper scripts for flexible verification
            - Multi-architecture support (amd64, arm64)
            
            See the [README](https://github.com/Beneficial-AI-Foundation/dockerfile_verus/blob/master/README.md) for complete usage instructions.
          draft: false
          prerelease: false
